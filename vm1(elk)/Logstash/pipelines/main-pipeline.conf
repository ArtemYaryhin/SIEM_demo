input {
  beats {
    port => 5044
  }
}

filter {
  if "elastic" not in [tags] {
    mutate { add_tag => ["elastic"] }
  }

  if [ttl] and ([ttl] < 30 or [ttl] > 128) {
    mutate { add_tag => ["suspicious_ttl"] }
  }

  if [port] in [23, 21, 4444, 3389, 5900, 102, 20000, 44818, 2222, 502, 789, 1080, 161, 162, 69] {
    mutate { add_tag => ["suspicious_port"] }
  }

  if [port] in [2404, 47808, 4840] {
    mutate { add_tag => ["ics_protocol_detected"] }
  }

  if [flags] and "URG" in [flags] {
    mutate { add_tag => ["suspicious_flag"] }
  }

  if [flags] and "FIN" in [flags] and "PSH" in [flags] {
    mutate { add_tag => ["scan_pattern"] }
  }

  if [flags] and "RST" in [flags] and "SYN" in [flags] {
    mutate { add_tag => ["reset_surge"] }
  }

  if [os] and [os] =~ /Windows|Android|macOS|iOS|FreeBSD/ {
    mutate { add_tag => ["unusual_os"] }
  }

  if [user_agent] and [user_agent] =~ /nmap|curl|masscan|hydra|zmap|metasploit/i {
    mutate { add_tag => ["known_attack_tool"] }
  }

  if [error_code] and [error_code] =~ /timeout|unauthorized|segfault|memory|failed/i {
    mutate { add_tag => ["session_error"] }
  }

  ruby {
    code => '
      tags = event.get("tags") || []
      score = 0
      suspicious_tags = ["suspicious_ttl", "suspicious_port", "suspicious_flag", "scan_pattern", "unusual_os", "known_attack_tool", "reset_surge", "session_error", "ics_protocol_detected"]
      suspicious_tags.each { |t| score += 1 if tags.include?(t) }
      if score >= 2
        event.set("severity", "high")
        tags << "telegram_alert"
        event.set("tags", tags.uniq)
      else
        event.set("severity", "low")
      end
    '
  }

  if [event][module] == "system" and [event][dataset] == "socket" and (
    [source][ip] =~ /^10\./ or
    [source][ip] =~ /^172\.(1[6-9]|2[0-9]|3[01])\./ or
    [source][ip] =~ /^192\.168\./
  ) {
    mutate { add_tag => ["private_ip_detected"] }
  }

  if [host] {
    mutate {
      rename => { "[host]" => "[host_data]" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["https://10.128.0.16:9200"]
    user => "elastic"
    password => "${ELASTIC_PASSWORD}"
    index => "logs-%{+YYYY.MM.dd}"
    ssl_enabled => true
    ssl_verification_mode => "none"
  }

  if "telegram_alert" in [tags] {
    pipeline { send_to => "alert_input" }
  }

  if "private_ip_detected" in [tags] {
    http {
      url => "http://10.128.0.13:8000/alert"
      http_method => "post"
      format => "json"
      content_type => "application/json"
      mapping => {
        "event_type"     => "Private IP connection"
        "source_ip"      => "%{[source][ip]}"
        "destination_ip" => "%{[destination][ip]}"
        "severity"       => "medium"
        "extra_info"     => "Socket connection from private IP detected"
        "host"           => "%{[host_data][name]}"
        "timestamp"      => "%{@timestamp}"
      }
    }
  }
}
